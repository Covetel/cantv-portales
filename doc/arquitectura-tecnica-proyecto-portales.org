#+TITLE: Arquitectura Técnica del Proyecto de Portal cantv.com.ve en TIL
#+AUTHOR:    Cooperativa Venezolana de Tecnologías Libres R.S.
#+EMAIL:     info@covetel.com.ve
#+DATE:
#+DESCRIPTION: Documentación corporativa de la arquitectura técnica del proyecto de portales web en Plone para el sitio cantv.com.ve,
#+KEYWORDS: covetel cantv portal
#+LaTeX_CLASS: covetel
#+LaTeX_CLASS_OPTIONS: [letterpaper,oneside,spanish]
#+LANGUAGE:  es
#+OPTIONS:   H:3 num:t toc:3 \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:
#+LATEX_HEADER: \usepackage{array}
#+LATEX_HEADER: \usepackage{float}
#+LATEX_HEADER: \input{titulo-arq-tecnica-proyecto-portales}

* Introducción

Este documento define la arquitectura técnica de TI para los siguientes productos: 

 1. Portales Web: /cantv.com.ve/ y /cantv.net/
 2. Portal de Autogestión

* Requerimientos de configuración de los nuevos productos propuestos para la implementación
  
** Nuevos productos a implementar en la solución
*** Automatización de configuraciones

Con el advenimiento de filosofías como "Datacenter Definido por
Software"[fn:9] y la evidente escasez de mano de obra calificada para
administrar sistemas informáticos, la tendencia actual para lograr una
continuidad operativa eficiente y eficaz, incluye estrategias como la
automatización en el despliegue de configuraciones en cada entorno operativo.

Definiendo un estado deseado de la plataforma de servicios de manera
agnóstica, dejando los procedimientos inherentes a las modificaciones como
trabajo del /framework/ de automatización, e implementando los cambios de
manera programática, se puede garantizar la posibilidad efectiva de revertir
cambios a un estado operativo anterior.

Al automatizar el proceso de propagación e implementación de configuraciones
además: se incrementa la productividad, se reducen los errores por
intervención humana y en caso de incidentes se tiene una mayor visibilidad de
su plataforma.

Para este fin, es nuestra recomendación implementar el /framework/ de
automatización de configuración CFEngine, diseñado desde cero por Mark
Burgess[fn:6] en el año 1993. Dicho framework está licenciado bajo la GPL3.

Con un soporte plataformas amplio, dicho /framework/ puede desplegar
configuraciones en varias distribuciones de Linux y tipos de Unix, incluyendo
(pero no limitado a) Debian, CentOS, Ubuntu, FreeBSD, Solaris y AIX.

CFEngine se basa en un modelo /pull/ donde los nodos a configurar, obtienen su
configuración de un servidor de políticas y un agente local se encarga de
*mantener promesas* para garantizar *un estado deseado*.

Este enfoque es escalable y distribuido, además de brindar la flexiblidad de
mantener su funcionamiento aún mientras se está desconectado de la red, con la
última copia disponible de las políticas.

*** Balanceo de carga

La solución disponible en CANTV para la distribución de tráfico entre nodos de
un cluster de máquinas, es el producto /Ace/ de la compañía /Cisco
Networks/. Dicha herramienta es el recurso con el que el equipo de trabajo
está familiarizado y para lo que se ha invertido dinero en licencias de
/contextos/ para brindar la característica de balanceo de carga.

Sin embargo, esta plataforma se encuentra fuera de soporte para parches de
seguridad desde el 28 de Septiembre de 2013[fn:7] y no hay manera de utilizar
paliativos o parches de terceros porque está basado en una solución privativa
y cerrada de la cual no se dispone el código fuente. Para más fechas
relacionadas con el final del soporte y servicio de este equipo puede
consultar la nota al pie.

Una alternativa viable para el manejo de balanceo de carga reside en opciones
como /HA-Proxy/ que al ser implementado dentro de la distribución /pfSense/[fn:8],
logra brindar prestaciones comparables al producto de Cisco, teniendo la
posibilidad de ser configurado automáticamente para seguir la tendencia de
Datacenters Definidos por Software de la mano de CFEngine.

Considerando que la plataforma de portales actual tiene más de 10 años de
implentada, las consideraciones de diseño que estamos tomando en cuenta deben
tener al menos la visión de que se mantengan operativas y mantenibles durante
al menos esa cantidad de tiempo.

Aún cuando la alternativa disponible es Cisco Ace, nuestra posición como
asesores, es que dicha plataforma no tiene la perdurabilidad en el tiempo para
formar parte del conjunto de herramientas libres a implementar en la
plataforma de Portales de CANTV, donde se pone en riesgo la operatividad de
todo el conjunto al incluir un producto privativo que se encuentra en el final
de su ciclo de vida y que será abandonado por el proveedor en menos de tres
años.

** Protocolo de autenticación y autorización de los productos a los que se conectarán los usuarios finales

Los usuarios finales se van a conectar a una interfaz /web/, implementada como
un componente de /Plone/, desarrollado utilizando el marco de trabajo
/Zope/. Se recomienda utilizar el mecanismo nativo de /Plone/ integrado a
/LDAP/ para autenticar el acceso al servicio por parte de los usuarios
finales.
\\

Se recomienda usar como /Back-End/ de los usuarios finales, los servidores
/LDAP/ que ya posee la organización y que actualmente es el /Back-End/ de
usuarios para la plataforma de correo de /CANTV.NET/.
\\

Dentro de los productos, además de los portales de CANTV, se encuentra el
/Portal de Autogestión/, en donde de igualmanera recomendamos utilizar el
mecanismo nativo de /Plone/ integrado a /LDAP/ para autenticar los usuarios.

* Arquitectura Técnica TI
  
La plataforma esta diseñada en función de cinco (5) capas: 

 1. *Servidores Web:* Esta capa atiende las conexiones bajo el
    protocolo /HTTP/ que provienen de los clientes de la plataforma. Es
    también responsable de manejar las conexiones /HTTPS/ usando certificados
    /x.509/ proveidos por CANTV.

 2. *Aceleración Web:* Esta capa esta compuesta por servidores ejecutando un
    componente conocido actualmente como /Web Application Accelerator/ o
    acelerador de aplicaciones web, también conocidos como caché de proxy
    /HTTP/ inversa. El objetivo de esta capa es aumentar el rendimiento de
    Plone y mejorar la experiencia del usuario en términos de tiempo de respuesta.

 3. *Balanceadores:* Esta capa es responsable de distribuir la carga de
    trabajo a través de los servidores /ZEO Clients/

 4. *Clientes ZEO:* /ZEO/ Es la tecnología de balanceo de carga usada con
    /Zope/.

 5. *ZEO Sever | ZODB / Blobs*

#+CAPTION: Entorno de Producción y Calidad
#+NAME: capas
#+ATTR_LATEX: placement=[ht]
[[./diagramas/cantv-arq-hardware-plone-prod.png]]

\clearpage

#+CAPTION: Entorno de Desarrollo
#+NAME: capas
#+ATTR_LATEX: placement=[ht] scale=0.5
[[./diagramas/cantv-arq-hardware-plone-dev.png]]


\clearpage

** Estrategia de Acceso (Autenticación, Autorización y Auditoría)

*** Autenticación

Plone posee una base datos de usuario propia, pero se recomienda utilizar un
repositorio de usuarios externo, como un servidor compatible con la tecnología
de LDAP.
\\

LDAP (Lightweight Directory Access Protocol) es un protocolo estándar para
acceso y modificación de datos usando servicios de directorio que operan sobre
el protocolo TCP/IP. 
\\

Existen varias implementaciones del protocolo LDAP, tales como /Microsoft
Active Directory/, /Novell/, /Sun One/, /OpenLDAP/.
\\

Nuestro equipo recomienda el uso de /OpenLDAP/ como /backend/ de
autenticación de usuarios. /OpenLDAP/ es un proyecto de Software Libre que
implementa el protocolo /LDAP/.
\\

Actualmente CANTV posee una plataforma de servicios de directorios basada en
/OpenLDAP/, en donde ya se encuentran los usuarios corporativos de la empresa,
recomendamos utilizar esta plataforma.

*** =plone.app.ldap=

Existe un componente de Plone llamado =plone.app.ldap=, este componente provee
un panel de control para manejar los usuarios y grupos que se encuentran en la
plataforma de directorio /LDAP/ al que este conectado.

Este compomente provee las funcionalidades desarrolladas por el módulo
=PloneLDAP= [fn:1] y está construido usando las librerías =LDAPMultiPlugins= y =LDAPUserFolder= [fn:2].
\\

Este componente integra el /backend/ LDAP a Plone de la siguiente manera: 

 1. Los usuarios en la base de datos LDAP pueden ser usados como usuarios normales
    de Plone, se puede buscar entre los usuarios, asignar roles, crear
    usuarios y eliminar usuarios. [fn:3]
 2. Los grupos en la base de datos LDAP pueden ser usados como grupos normales
    de Plone. se puede verlos, manejar los miembros de un grupo, crear nuevos
    grupos, remover los grupos. Es importante destacar que los grupos /LDAP/
    solo pueden tener como miembros a usuarios /LDAP/, los usuarios /LDAP/
    pueden ser miembros de grupos internos de Plone que no están en /LDAP/.
 3. Las propiedades de pertenencia a grupos de los usuarios LDAP no necesitan
    guardarse completamente en el directorio LDAP, pude combinar propiedades
    almacenadas en LDAP con propiedades almacenadas en ZODB.

Nota: Si usa Active Directory como backend de este componente, todo el acceso
es de solo lectura, no podrá escribir o modificar entradas en el directorio.

*** Auditoría

**** Entidades de Seguridad

Primero lo primero, para entender cómo funciona la seguridad en Plone, hay que
llamar a cada cosa por su nombre y saber donde viven dentro de
Plone. Los usuarios, grupos y roles viven dentro del objeto /Plone PAS/, que es un
reemplazo del concepto conocido como =user folder= en la jerga de /Zope/.

/PAS/ hace más cosas que guardar usuarios en la /ZODB/, PAS se encarga de
gestionar los grupos, la pertenencia de los usuarios a los grupos (miembros de
grupo), los roles y su asignación. Pero la característica más importante de
/PAS/ descansa en la palabra /Pluggable/. Podemos extender la funcionalidad de
/PAS/ a través de /plugins/ que nos permiten conectarnos a otra base de datos
de usuarios y grupos.

Ahora, veamos uno de los tópicos más importantes de la seguridad en Plone.

**** Roles 

Los roles en Plone son etiquetas (/tags/) asignadas a nuestros grupos o
usuarios. Estas etiquetas tienen valor significativo sobre los permisos y
derechos del usuario o grupo.

Existen siete (7) roles principales en una instalación de Plone: 

#+Caption: Roles de Plone
#+LABEL: tbl:roles_plone
#+ATTR_LaTeX: longtable align=m{4cm}p{9cm}

|----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| *Rol*                | *Propósito*                                                                                                                                                                                                                                                                                                                     |
|----------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| .                    |                                                                                                                                                                                                                                                                                                                                 |
| *Member*             | Todos los usuarios tienen ese rol por defecto. Este rol otorga los permisos mínimos que cada usuario debe tener.                                                                                                                                                                                                                |
| .                    |                                                                                                                                                                                                                                                                                                                                 |
| *Manager*            | Este rol otorga los privilegios más altos del portal.                                                                                                                                                                                                                                                                           |
| .                    |                                                                                                                                                                                                                                                                                                                                 |
| *Site Administrator* | Este rol fue introducido en la versión 4.1 de Plone, nos permite otorgarle a los usuarios el permiso de cambiar las configuraciones del panel de control de Plone, adicionalmente ver y editar casi todo el contenido, sin otorgar acceso a las acciones potencialmente destructivas de la /Interfaz de Gestión de Zope/ (ZMI). |
| .                    |                                                                                                                                                                                                                                                                                                                                 |
| *Reviewer*           | Los usuarios con este rol, el cual es otorgado al grupo /Reviewers/, pueden ver y aprobar contenido que ha sido enviado para revisión (/review/).                                                                                                                                                                               |
| .                    |                                                                                                                                                                                                                                                                                                                                 |
| *Reader*             | Cuando se asigna el rol /Reader/, el usuario podrá ver un objeto de tipo contenido, incluso cuando usuarios normales (/Members/) no puedan ver este contenido, como por ejemplo con un objeto privado.                                                                                                                          |
| .                    |                                                                                                                                                                                                                                                                                                                                 |
| *Editor*             | Este rol es la contraparte del rol /Reader/, este rol se utiliza para otorgar permisos locales de modificación.                                                                                                                                                                                                                 |
| .                    |                                                                                                                                                                                                                                                                                                                                 |
| *Contributor*        | Este rol se utiliza para delegar el permiso de agregar elementos de contenido a las carpetas.                                                                                                                                                                                                                                   |

\clearpage 

Adicionalmente /Zope/ define tres (3) roles automáticamente asignables: 

#+Caption: Roles de Zope
#+LABEL: tbl:roles_zope
#+ATTR_LaTeX: longtable align=m{4cm}p{9cm}


|---------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| *Rol*         | *Propósito*                                                                                                                                                                      |
|---------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| .             |                                                                                                                                                                                  |
| *Owner*       | Este rol es asignado al dueño del contenido en cuestión. Normalmente es otorgado al usuario que ha creado el elemento.                                                           |
| .             |                                                                                                                                                                                  |
| *Authenticated* | Este rol es asignado a todos los usuarios que se han autenticado. Este rol es de más bajo privilegio que el rol /Member/ y no puede ser revocado o otorgado de manera explícita. |
| .             |                                                                                                                                                                                  |
| *Anonymous*   | Este rol es asignado a todos los usuarios que no se han autenticado. Existe un usuario especial llamado /Anonymous/ que siempre tiene este rol .                                 |

**** Auditoría sobre los cambios en entidades de seguridad.

Actualmente un cambio sobre las entidades de seguridad de Plone (usuarios,
grupos, roles) no se registra en el /Log/ de eventos bajo ningún nivel de
depuración. Es necesario modificar el código fuente de la interfaz desde donde
se administran las entidades de seguridad de Plone. 

\clearpage
** Estrategia de Entornos Operativos
*** Componentes
#+CAPTION: Diagrama de Componentes
#+NAME: componentes
#+ATTR_LATEX: placement=[ht] scale=0.25
[[./diagramas/componentes.png]]


*** Arquitectura.

Se recomienda utilizar una arquitectura unificada de x86_64 Bits en los servidores
que componen la solución.

*** Sistema Operativo.

El sistema operativo recomendado para los servidores que componen la solución
es la versión estable para el momento de pase a producción de Debian
GNU/Linux.

*** Bases de Datos.

Por favor deje de pensar en bases de datos relacionales por un momento, si por
favor deje de pensar en tablas, tuplas, campos y el lenguaje SQL. Déjenos
presentarle a /ZODB/.
\\

/ZODB/ es una base de datos orientada a objetos para almacenar objetos de
=python= de manera persistente y transparente. Esta incluida como parte del
proyecto /Zope/ pero puede ser usada de manera independiente fuera de /Zope/. 
\\

La razón para no usar un sistema de base de datos relacional para este
proyecto es fácil de entender. Es más natural para un manejador de contenidos
almacenar datos en objetos que dependen de una capa de abstracción que
convertir el objeto que esta almacenando a campos en una tabla (o varios
campos a través de varias tablas) y nuevamente el proceso inverso al traer los
datos de un objeto que esta en la base de datos relacional. En todos los
aspectos, es más fácil almacenar el objeto directamente y de manera
transparente en la base de datos como un objeto.
\\

Plone almacena el contenido del portal, los componentes, las plantillas y todo
el código necesario en /ZODB/. El contenido es guardado en la base de datos
utilizando una estructura en árbol jerárquica desde la raíz del sitio de
Plone. Cada elemento de contenido es un objeto y la meta-data asociada a este
objeto como titulo, descripción, cuerpo, entre otros son los atributos del
objeto. Para aplicaciones como un manejador de contenidos, es más eficiente
almacenar el contenido en esta forma natural. 
\\

En la siguiente lista podemos ver las características principales de ZODB:

 - Transacciones
 - Historial / (undo)
 - Almacenamiento adaptable a través de módulos. (/pluggable/)
 - Sistema de cache integrado
 - Control de concurrencia mediante versiones múltiples (MVCC)
*** Servidor Web.

Es técnicamente posible configurar una instancia de /Zope/ para que escuche en
el puerto 80 =HTTP=, pero no es lo recomendado. Un servidor web dedicado va a
hacer un mejor trabajo atendiendo un número mayor de peticiones de conexión,
manejando los picos de tráfico, las peticiones inválidas y potencialmente
maliciosas. Además, /Zope/ no tiene soporte /SSL/ nativo (/HTTPS/). Por lo
tanto, un entorno de producción de Plone emplea un servidor web delante de
/Zope/ como proxy reveso. 

El servidor web recomendado para utilizar como proxy reverso con Plone es
/Nginx/. Es muy rápido y fácil de configurar. Se utilizan los módulos de
=proxy= y =rewrite= para hacer proxy reverso contra /Zope/ y reescrituras para
el trabajo de /hosting/ virtual. 

**** *¿Porque Nginx?*

Para grandes entornos de producción, en servidores web nos enfrenamos al
problema de escalabilidad y rendimiento. Para resolver este problema Igor
Sysoev[fn:4] en el año 2002 comenzó a desarrollar un servidor web escrito en
el lenguaje de programación C. 

La implementación de /Nginx/ para atender las peticiones es muy diferente a la
implementación convencional de los servidores web basada en el modelo de
varios hilos de ejecución, por cada cliente que hace una petición hay un hilo
de ejecución que esta completamente separado y esta dedicado para atender
estas peticiones. Esto causa problemas de bloqueo de I/O cuando los procesos
están esperando por terminar con la petición y liberar los recursos usados
(memoria, CPU). Adicionalmente la creación de procesos separados consume más
recursos.

/Nginx/ soluciona este problema utilizando una técnica de programación
conocida como /event-driven/[fn:5], logrando de esta manera un servidor web
asíncrono, /non-blocking/, y una arquitectura basada en un solo hilo de
ejecución trabajando con múltiples procesos asíncronos. Esto hace a /Nginx/ un
servidor web mucho más rápido y escalable que el conocido /Apache/ para
entornos de alto desempeño.

*** Entornos Operativos

Se requieren los siguientes entornos operativos para la solución propuesta: 

 1. Entorno de Desarrollo
 2. Entorno de Calidad
 3. Entorno de Producción

Las condiciones para el entorno de calidad deben ser exactamente iguales a las
condiciones establecidas en el entorno de producción. La cantidad de recursos
para el entorno de desarrollo puede ser menor a la cantidad de recursos
utilizada para aprovisionar los entornos de calidad y producción. 
\\

Se recomienda que estos entornos operativos esten aislados a nivel de red,
incluso a nivel físico. No debe ser posible enrutar tráfico desde un entorno a
otro, incluso el direccionamiento, rutas y reglas de tráfico TCP/IP del
entorno de calidad y producción deben ser iguales.

** Dimensionamiento de la Plataforma Tecnológica 

Acontinuación se describe en detalle el dimiensionamiento de la plataforma
tecnológica para los entornos de calidad y producción. 

*** Servidores Web

**** Software a implementar

El componente nginx es el servidor web elegido para la tarea de servir
el contenido en la modalidad de proxy reverso, de cara a los
navegadores web en los computadores de los usuarios que visiten cada
portal.

Se prefiere nginx por encima de Apache Web Server, por su ligereza y
alto nivel de optimización en las operaciones más frecuentes al servir
contenido web en forma de HTML, Javascript, imágenes y video.

El software nginx ha sido diseñado y escrito con una cantidad limitada
de funcionalidades en mente, tomando en consideración la optimización,
en vez de ofrecer una amplia gama de características.

Esta capa es la encargada de ofercer la capacidad de que los usuarios
se conecten al portal usando cifrado SSL para confidencialidad y
protección de sus datos personales.

**** Hardware recomendado para producción

#+CAPTION: Recomendaciones de Hardware Capa Servidores Web
#+LABEL: tbl:tabla_webserver
#+ATTR_LaTeX: longtable align=|l|l|

|--------------+-------------------------------------------|
| *Componente* | *Requerimiento Recomendado*               |
|--------------+-------------------------------------------|
| Procesador   | *CPU Cores:* 2, *CPU Clock Freq:* 2.3 GHz |
|--------------+-------------------------------------------|
| RAM          | 2 GB                                      |
|--------------+-------------------------------------------|
| Disco Duro   | 4 GB                                      |
|--------------+-------------------------------------------|
| Servidores   | 6                                         |
|--------------+-------------------------------------------|

**** Hardware recomendado para calidad

#+CAPTION: Recomendaciones de Hardware Capa Servidores Web
#+LABEL: tbl:tabla_webserver
#+ATTR_LaTeX: longtable align=|l|l|

|--------------+-------------------------------------------|
| *Componente* | *Requerimiento Recomendado*               |
|--------------+-------------------------------------------|
| Procesador   | *CPU Cores:* 2, *CPU Clock Freq:* 2.3 GHz |
|--------------+-------------------------------------------|
| RAM          | 2 GB                                      |
|--------------+-------------------------------------------|
| Disco Duro   | 4 GB                                      |
|--------------+-------------------------------------------|
| Servidores   | 6                                         |
|--------------+-------------------------------------------|

**** Hardware recomendado para desarrollo

#+CAPTION: Recomendaciones de Hardware Capa Servidores Web
#+LABEL: tbl:tabla_webserver
#+ATTR_LaTeX: longtable align=|l|l|

|--------------+-------------------------------------------|
| *Componente* | *Requerimiento Recomendado*               |
|--------------+-------------------------------------------|
| Procesador   | *CPU Cores:* 2, *CPU Clock Freq:* 2.3 GHz |
|--------------+-------------------------------------------|
| RAM          | 1 GB                                      |
|--------------+-------------------------------------------|
| Disco Duro   | 4 GB                                      |
|--------------+-------------------------------------------|
| Servidores   | 1                                         |
|--------------+-------------------------------------------|



*** Servidores /Caché/

**** Software a implementar

Varnish es el software para /caching/ elegido para acelerar la entrega
de contenido habitual en la arquitectura de portales propuesta.

Varnish es una herramienta flexible, que permite almacenar contenido
en estructuras de tipo clave/valor en donde usualmente las URLs son la
clave.

Su versatilidad esta fundamentada en que posee un lenguaje de
configuración, llamado /Varnish Configuration Language/ con el cual se
logra representar el diseño que tenga en mente el administrador.

**** Hardware recomendado para producción

#+CAPTION: Recomendaciones de Hardware Capa Cache
#+LABEL: tbl:tabla_cache
#+ATTR_LaTeX: longtable align=|l|l|


|--------------+-------------------------------------------|
| *Componente* | *Requerimiento Recomendado*               |
|--------------+-------------------------------------------|
| Procesador   | *CPU Cores:* 2, *CPU Clock Freq:* 2.3 GHz |
|--------------+-------------------------------------------|
| RAM          | 2 GB                                      |
|--------------+-------------------------------------------|
| Disco Duro   | 4 GB                                      |
|--------------+-------------------------------------------|
| Servidores   | 6                                         |
|--------------+-------------------------------------------|

**** Hardware recomendado para calidad

#+CAPTION: Recomendaciones de Hardware Capa Cache
#+LABEL: tbl:tabla_cache
#+ATTR_LaTeX: longtable align=|l|l|


|--------------+-------------------------------------------|
| *Componente* | *Requerimiento Recomendado*               |
|--------------+-------------------------------------------|
| Procesador   | *CPU Cores:* 2, *CPU Clock Freq:* 2.3 GHz |
|--------------+-------------------------------------------|
| RAM          | 2 GB                                      |
|--------------+-------------------------------------------|
| Disco Duro   | 4 GB                                      |
|--------------+-------------------------------------------|
| Servidores   | 6                                         |
|--------------+-------------------------------------------|

**** Hardware recomendado para desarrollo

#+CAPTION: Recomendaciones de Hardware Capa Cache
#+LABEL: tbl:tabla_cache
#+ATTR_LaTeX: longtable align=|l|l|


|--------------+-------------------------------------------|
| *Componente* | *Requerimiento Recomendado*               |
|--------------+-------------------------------------------|
| Procesador   | *CPU Cores:* 2, *CPU Clock Freq:* 2.3 GHz |
|--------------+-------------------------------------------|
| RAM          | 1 GB                                      |
|--------------+-------------------------------------------|
| Disco Duro   | 4 GB                                      |
|--------------+-------------------------------------------|
| Servidores   | 1                                         |
|--------------+-------------------------------------------|



*** Balanceadores

Esta es una capa que permite conectar las capas web de la plataforma
con el servidor de aplicaciones de Plone, brindando alta
disponibilidad a la arquitectura. La propuesta inicial, presenta un
balanceador de carga implementado por software, como plan alternativo
en caso de que no sea posible usar la plataforma de balanceo de
tráfico por hardware de CANTV.

**** Software a implementar

/HAProxy/ es un programa diseñado bajo la filosofía de programación
orientada a eventos que le permite manejar grandes cantidades de
conexiones concurrentes a muy alta velocidad.

Con una máquina de 64 bits, 1 GB de RAM y una configuración especial
de Kernel, es capaz de manejar tanto como 200.000 conexiones
concurrentes

Es una alternativa muy útil a la hora de agregar la característica de
"Alta Disponbilidad" a una plataforma de servicios.

**** Hardware recomendado para producción

#+CAPTION: Recomendaciones de Hardware Capa Balanceador
#+LABEL: tbl:tabla_balanceador
#+ATTR_LaTeX: longtable align=|l|l|


|--------------+-------------------------------------------|
| *Componente* | *Requerimiento Recomendado*               |
|--------------+-------------------------------------------|
| Procesador   | *CPU Cores:* 1, *CPU Clock Freq:* 2.3 GHz |
|--------------+-------------------------------------------|
| RAM          | 2 GB                                      |
|--------------+-------------------------------------------|
| Disco Duro   | 4 GB                                      |
|--------------+-------------------------------------------|
| Servidores   | 3                                         |
|--------------+-------------------------------------------|

**** Hardware recomendado para calidad

#+CAPTION: Recomendaciones de Hardware Capa Balanceador
#+LABEL: tbl:tabla_balanceador
#+ATTR_LaTeX: longtable align=|l|l|

|--------------+-------------------------------------------|
| *Componente* | *Requerimiento Recomendado*               |
|--------------+-------------------------------------------|
| Procesador   | *CPU Cores:* 1, *CPU Clock Freq:* 2.3 GHz |
|--------------+-------------------------------------------|
| RAM          | 2 GB                                      |
|--------------+-------------------------------------------|
| Disco Duro   | 4 GB                                      |
|--------------+-------------------------------------------|
| Servidores   | 3                                         |
|--------------+-------------------------------------------|
        
**** Hardware recomendado para desarrollo

#+CAPTION: Recomendaciones de Hardware Capa Balanceador
#+LABEL: tbl:tabla_balanceador
#+ATTR_LaTeX: longtable align=|l|l|


|--------------+-------------------------------------------|
| *Componente* | *Requerimiento Recomendado*               |
|--------------+-------------------------------------------|
| Procesador   | *CPU Cores:* 1, *CPU Clock Freq:* 2.3 GHz |
|--------------+-------------------------------------------|
| RAM          | 1 GB                                      |
|--------------+-------------------------------------------|
| Disco Duro   | 4 GB                                      |
|--------------+-------------------------------------------|
| Servidores   | 1                                         |
|--------------+-------------------------------------------|




*** /Clientes ZEO/ 

**** Software a implementar

Los clientes /ZEO/ (Zope Enterprise Objects) son la primera línea de
servicios en una solución de alta disponibilidad para portales web con
Plone.

Los clientes /ZEO/ asumen el rol de ejecutar servicios HTTP, scripts,
ejecución de código y /renderización/ de plantillas.

Son además los que se encargan de conectarse con el servidor ZEO para
extraer información de las diferentes instancias Zope (cada Portal)
que está almacenado en nuestro /servidor ZEO - ZODB/

**** Hardware recomendado para producción

#+CAPTION: Recomendaciones de Hardware para Capa Cliente Zeo 
#+LABEL: tbl:tabla_balanceador
#+ATTR_LaTeX: longtable align=|l|l|


|--------------+-------------------------------------------|
| *Componente* | *Requerimiento Recomendado*               |
|--------------+-------------------------------------------|
| Procesador   | *CPU Cores:* 8, *CPU Clock Freq:* 2.3 GHz |
|--------------+-------------------------------------------|
| RAM          | 16 GB                                     |
|--------------+-------------------------------------------|
| Disco Duro   | 20 GB                                     |
|--------------+-------------------------------------------|
| Servidores   | 6                                         |
|--------------+-------------------------------------------|

**** Hardware recomendado para calidad

#+CAPTION: Recomendaciones de Hardware para Capa Cliente Zeo 
#+LABEL: tbl:tabla_balanceador
#+ATTR_LaTeX: longtable align=|l|l|


|--------------+-------------------------------------------|
| *Componente* | *Requerimiento Recomendado*               |
|--------------+-------------------------------------------|
| Procesador   | *CPU Cores:* 8, *CPU Clock Freq:* 2.3 GHz |
|--------------+-------------------------------------------|
| RAM          | 16 GB                                     |
|--------------+-------------------------------------------|
| Disco Duro   | 20 GB                                     |
|--------------+-------------------------------------------|
| Servidores   | 6                                         |
|--------------+-------------------------------------------|

**** Hardware recomendado para desarrollo

#+CAPTION: Recomendaciones de Hardware para Capa Cliente Zeo 
#+LABEL: tbl:tabla_balanceador
#+ATTR_LaTeX: longtable align=|l|l|


|--------------+-------------------------------------------|
| *Componente* | *Requerimiento Recomendado*               |
|--------------+-------------------------------------------|
| Procesador   | *CPU Cores:* 4, *CPU Clock Freq:* 2.3 GHz |
|--------------+-------------------------------------------|
| RAM          | 8 GB                                      |
|--------------+-------------------------------------------|
| Disco Duro   | 10 GB                                     |
|--------------+-------------------------------------------|
| Servidores   | 2                                         |
|--------------+-------------------------------------------|



*** /Servidor ZEO y ZODB/

**** Software recomendado

El Servidor ZEO es el núcleo central de la solución en términos de
almacenamiento de datos para la solución de Portales. Por esta razón
se recomienda que todos el contenido usado por este servidor, se
encuentra almacenado en un dispositivo local de alta velocidad, como
un disco SSD.

Cada sitio portal de Plone es creado como un objeto que vive dentro de
una instancia Zope cuyo contenido es entregado a los /clientes ZEO/
por demanda, dependiendo de las peticiones de los usuarios que llegan
a través de las capas de /Servidores Web/ y /Caché/.

Considerando que este podría ser un punto de acumulación de falla
(single point of failure), nuestra recomendación es que se implementen
el servidor por duplicado en un esquema activo/pasivo y que cada una
de esas instancias virtuales se aprovisionen en nodos UCS distintos,
para garantizar el funcionamiento adecuado de la propuesta de alta
disponibilidad.

**** Hardware recomendado para producción

#+CAPTION: Recomendaciones de Hardware para Capa Zeo Server
#+LABEL: tbl:tabla_balanceador
#+ATTR_LaTeX: longtable align=|l|l|


|--------------+------------------------------------------------|
| *Componente* | *Requerimiento Recomendado*                    |
|--------------+------------------------------------------------|
| Procesador   | *CPU Cores:* 20, *CPU Clock Freq:* 1.7 GHz     |
|--------------+------------------------------------------------|
| RAM          | 64 GB                                          |
|--------------+------------------------------------------------|
| Disco Duro   | 30 GB (almacenamiento local de alta velocidad) |
|--------------+------------------------------------------------|
| Servidores   | 2 (alta disponibilidad activo-pasivo)          |
|--------------+------------------------------------------------|

**** Hardware recomendado para calidad

#+CAPTION: Recomendaciones de Hardware para Capa Zeo Server
#+LABEL: tbl:tabla_balanceador
#+ATTR_LaTeX: longtable align=|l|l|


|--------------+------------------------------------------------|
| *Componente* | *Requerimiento Recomendado*                    |
|--------------+------------------------------------------------|
| Procesador   | *CPU Cores:* 20, *CPU Clock Freq:* 1.7 GHz     |
|--------------+------------------------------------------------|
| RAM          | 64 GB                                          |
|--------------+------------------------------------------------|
| Disco Duro   | 30 GB (almacenamiento local de alta velocidad) |
|--------------+------------------------------------------------|
| Servidores   | 2 (alta disponibilidad activo-pasivo)          |
|--------------+------------------------------------------------|

**** Hardware recomendado para desarrollo

#+CAPTION: Recomendaciones de Hardware para Capa Zeo Server
#+LABEL: tbl:tabla_balanceador
#+ATTR_LaTeX: longtable align=|l|l|


|--------------+------------------------------------------------|
| *Componente* | *Requerimiento Recomendado*                    |
|--------------+------------------------------------------------|
| Procesador   | *CPU Cores:* 20, *CPU Clock Freq:* 1.7 GHz     |
|--------------+------------------------------------------------|
| RAM          | 16 GB                                          |
|--------------+------------------------------------------------|
| Disco Duro   | 15 GB                                          |
|--------------+------------------------------------------------|
| Servidores   | 1                                              |
|--------------+------------------------------------------------|



*** /Blob Storage/

**** Software recomendado

Esta capa no es una capa de procesamiento, es solo una capa de
almacenamiento. En términos del protocolo recomendado para usar, NFS
sería la tecnología a implementar.

NFS cumple los requerimientos mínimos de seguridad necesarios para
compartir los volúmenes necesarios para almacenar y compartir los
contenidos de /media/(documentos, imágenes, podcasts, video) que se
van publicar en el Portal.

**** Hardware recomendado

#+CAPTION: Recomendaciones de Hardware para Capa Blob Storage
#+LABEL: tbl:tabla_balanceador
#+ATTR_LaTeX: longtable align=|l|l|


|----------------+--------------------------------------------|
| *Componente*   | *Requerimiento Recomendado*                |
|----------------+--------------------------------------------|
| Almacenamiento | 100 GB (espacio compartido por NFS en red) |
|----------------+--------------------------------------------|

** Definición de Estrategia de Transposición entre los Entornos Operativos

*** Estrategia de Transposición de la Configuración.

Para el transporte de la configuración recomendamos utilizar el marco de
trabajo de automatiación de configuraciones /CFEngine/. Ver la sección
[[Automatización de configuraciones]] para más información.

** Definición de Estrategia de Incorporación de Nuevas Funcionalidades.

Para incluir nuevas funcionalidades se recomienda utilizar en entorno de
desarrollo, recomendamos desarrollar las funcionalidades nuevas como
componentes de /Plone/ escritos en el lenguaje de programación /Python/
utilizando el marco de trabajo /Zope/.
   
** Definición de Estrategia de Manejo de Trazas, Reportes, Indicadores y Alertas

Recomendamos almacenar los /logs/ de forma centralizada en un servidor de
/logs/ que posea tecnología adecuada para el análisis y la correlación de
/logs/. OSSIM (/Open Source Security Information Management/) puede ser una
herramienta de mucha ayuda en este punto.

Recomendamos utilizar una herramienta com /Pentaho/ para la creación de
tableros, reportes y análisis más especializados sobre los /logs/ de la
plataforma.
   
* Definición Estrategias de Configuración Técnica de la Plataforma TI

** Estrategia Adecuación Técnica de Entornos Operativos

Para garantizar la adecuación técnica de los entornos operativos de manera
programática y automatizada, recomendamos combinar dos componentes de
tecnología que nos permitiran obtener en muy poco tiempo y con la mínima
interveción humana los entornos operativo de desarrollo, calidad o producción
requeridos para este proyecto. 

El primer componente al que hacemos referencia es a /CFEngine/, por favor ver
la sección [[Automatización de configuraciones]] para más información.

El segundo componente al que hacemos referencia tiene que ver con el paradigma
de computación en la nube que recibe el nombre de /Infraestructura como
servicio/ del ingles /Infrastructure as a Service (IaaS)/, es un medio para
entregar almacenamiento básico y capacidades de computo como servicios
estandarizados en la red, tales como: servidores, maquinas virtuales,
almacenamiento, balanceadores de carga, enrutadores, todo esto a través de de
la tecnología de virtualización. Actualmente CANTV posee un conjunto de
recursos de computo orquestados mediante /OpenStack/, recomendamos orquestar
los recursos de computo para este proyecto con /OpenStack/, con el objetivo de
combinar las carácteristicas de ambos proyectos /CFEngine/ y /OpenStack/ para
lograr el despliegue automático y libre de fallas de los entornos operativos
requeridos.

** Estrategia Administración Técnica de Entornos Operativos
** Estrategia Certificación Técnica de la Plataforma
** Estrategia de Servicio y Soporte

[fn:1] [[http://plone.org/products/ploneldap/][PloneLDAP]]
[fn:2] [[http://www.dataflake.org/software/ldapmultiplugins/][LDAPMultiPlugins]]
[fn:3] Se recomienda configurar el componente para que no se puedan crear ni eliminar usuarios, ya que estos son funciones de otras gerencias.
[fn:4] http://en.wikipedia.org/wiki/Igor_Sysoev
[fn:5] http://en.wikipedia.org/wiki/Event-driven_programming 
[fn:6] Autor de libros como: "In Search of Certainty - The Science of Our
Information Infrastructure", "Analytical Network and System Administration:
Managing Human-Computer Systems" y "Principles of Network and System
Administration"
[fn:7] End-of-Life Milestones and Dates for the Cisco ACE 4710 Application
Control Engine Software Releases 1.7, 1.8, and 3.1
http://www.cisco.com/en/US/prod/collateral/contnetw/ps5719/ps7027/ps8361/eol_c51_591996.html
[fn:8] pfSense es una distribución libre para implementar /firewalls/ basada
en FreeBSD con un kernel (32 bits o 64 bits) adecuado para estos fines. Para
más información: http://www.pfsense.org/about-pfsense/getting-started.htm
[fn:9] *Datacenter Definido por Software* es una metodología de despliegue de
arquitectura que no solo implica virtualizar nodos de computación para
optimizar el uso de recursos, implica centralizar almacenamiento para permitir
migración en vivo y definir la infraestructura de redes virtuales para separar
y optimizar tráfico, reaccionando a patrones de uso de la plataforma de manera
automatizada.
